services:
  db:
    image: postgres
    container_name: turmfrontend-db
    volumes:
      - ${DB_VOLUME:-db-data}:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${DB_PORT}:5432"

  web:
    build: .
    container_name: turmfrontend-web
    command: >
      sh -c "./scripts/wait-for-it.sh db:5432 -t 120 &&
      python manage.py migrate &&
      python manage.py load_configuration ./config.json &&
      python manage.py create_groups_and_permissions &&
      (if [ \"$DEBUG\" = \"True\" ]; then python manage.py generate_admin_user; fi) &&
      (if [ \"$DEBUG\" = \"True\" ]; then echo 'Development server running at http://localhost:8000/ on local machine'; fi) &&
      (if [ \"$DEBUG\" = \"True\" ]; then python manage.py runserver 0.0.0.0:8000; else gunicorn TURMFrontend.wsgi:application --bind 0.0.0.0:8000 --workers 3; fi)"
    volumes:
      - .:/code
      - ./scripts/wait-for-it.sh:/scripts/wait-for-it.sh
    ports:
      - "${WEB_PORT}:8000"
    depends_on:
      - db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DOCKER_MODE: "True"
      DEBUG: ${DEBUG:-True}

  nextcloud:
    image: nextcloud
    container_name: turmfrontend-nextcloud
    profiles:
      - test
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: turmfrontend-db
      NEXTCLOUD_ADMIN_USER: ${NC_USER}
      NEXTCLOUD_ADMIN_PASSWORD: ${NC_PASSWORD}
      NEXTCLOUD_TRUSTED_DOMAINS: "localhost turmfrontend-nextcloud"
    ports:
      - "${NC_PORT}:80"
    volumes:
      - type: tmpfs
        target: /var/www/html

volumes:
  db-data: {}